name: "Ultimate Mastery CI/CD"
on:
  push:
    branches: ["main","hello"]
  pull_request:
    branches: ["main"]
  workflow_dispatch:
    inputs:
      run-tests:
        description: "Run unit tests?"
        type: boolean
        default: true
      timeout-minutes:
        description: "Timeout in minutes"
        type: number
        default: 10
      deploy-env:
        description: "Deploy environment"
        required: true
        type: choice
        default: 'staging'
        options:
          - staging
          - production
          - development
  repository_dispatch:  # Fixed: Correct indentation
    types: [external-build]
  schedule:
    - cron: "30 5,15 * * *"
jobs:
  build-linux:
    runs-on: ubuntu-latest
    outputs:
      build-time: ${{ steps.build-time.outputs.build-time }}
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4
      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '21'
          cache: 'maven'
      - name: Build with Maven
        run: mvn -B -ntp -DskipTests package 
      - name: Run tests with Maven
        if: ${{inputs.run-tests || github.event_name != 'workflow_dispatch'}}
        run: mvn -B -ntp test 
      - name: upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: 'build-artifact'
          path: 'target/*.jar'
      - name: Set build time output
        id: build-time
        run: echo "build-time=$(date +%s)" >> $GITHUB_OUTPUT
        
  hello-job:
    runs-on: ubuntu-latest
    outputs:
      build-time: ${{ steps.hello.outputs.greeting }}
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4
      - name: say Hello (Composite  Action Here)
        uses: ./.github/actions/say-hello
        id: hello
        with:
          who: "Linux-${{ runner.os }}"
  
  consume-outputs:
    runs-on: ubuntu-latest
    needs: [hello-job,build-linux]
    steps:
      - name: Echo greeting
        run: |
          echo "Greeting from hello-job was: '${{ needs.build-linux.outputs.build-time }}"
          echo "Greeting from hello-job was: '${{ needs.hello-job.outputs.greeting }}"
  
  build-matrix:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '21'
          cache: 'maven'

      - name: Build with Maven
        run: mvn -B -ntp -DskipTests package

      - name: Java Version Print
        run: java -version

      - name: Display OS info
        run: |
          echo "OS: ${{ matrix.os }}"
          echo "Runner OS: ${{ runner.os }}"
      
      - name: Generate artifacts
        run: | 
          echo "report" > report.txt
          echo "Build Completed" >> report.txt
          echo "Runner OS: ${{ runner.os }}" >> report.txt
          echo "Matrix OS: ${{ matrix.os }}" >> report.txt

      - name: Upload matrix report
        uses: actions/upload-artifact@v4
        with:
          name: 'matrix-report-${{ runner.os }}'
          path: 'report.txt'
      
     