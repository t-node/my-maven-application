name: Advanced Triggering Examples
# NOTE: For any branch-specific push filters to run, this workflow file must EXIST on that branch.

on:
  # 1) Object-based trigger (issues) with activity types
  issues:
    types: [opened, edited, closed, reopened, labeled, unlabeled, assigned, unassigned, milestoned, demilestoned]

  # 2) push with filters: branches, tags, paths (using glob + negation !)
  push:
    # You cannot use both "branches" and "branches-ignore" together for the SAME event.
    branches:
      - main
      - 'rel/**'        # all release branches
      - '!rel/**-beta'  # EXCLUDE betas via '!' refinement (order matters; exclusion comes after include)
    tags:
      - 'v*'            # any v-tag
      - '!v*-rc*'       # but not release candidates
    paths:
      - '**/*.java'     # only fire when .java files change
      - 'src/**'        # or anything in src/
      - '!src/test/resources/**'  # ...except test resources
      - 'pom.xml'       # or when POM changes

jobs:
  explain:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'
  
      - name: Show why we triggered
        run: |
          echo "Event: ${{ github.event_name }}"
          echo "Ref:   ${{ github.ref }}"
          echo "SHA:   ${{ github.sha }}"

      # Workflow functions (format, join, fromJSON, hashFiles, startsWith/endsWith/contains)
      - name: Function sampler (format/join)
        run: |
          echo "${{ format('Building Java project on {0} @ {1} @{2} @ {3}', github.ref, github.sha, github.event_name, github.event_path) }}"
          echo "${{ join(fromJSON('["compile","test","package","verify"]'), ' | ') }}"

      - name: Hash Java sources (hashFiles)
        env:
          JAVA_HASH: ${{ hashFiles('**/*.java') }}
          POM_HASH: ${{ hashFiles('pom.xml') }}
        run: |
          echo "JAVA_HASH=${JAVA_HASH}"
          echo "POM_HASH=${POM_HASH}"

      - name: Conditional echoes using string funcs
        if: ${{ startsWith(github.ref, 'refs/heads/rel/') && !endsWith(github.ref, '-beta') }}
        run: echo "We are on a non-beta release branch"

      - name: Maven build and test
        run: |
          mvn clean compile test package -DskipTests=false

      - name: Pretty-print contexts (toJSON)
        run: |
          echo "github context:"
          echo "${{ toJSON(github) }}" | head -c 4000
          echo ""
          echo "job context:"
          echo "${{ toJSON(job) }}" | head -c 4000
          echo "inputs context:"
          echo "${{ toJSON(inputs) }}" | head -c 4000
          echo "runner context:"
          echo "${{ toJSON(runner) }}" | head -c 4000

  create-issue:
    needs: explain
    uses: ./.github/workflows/create-failure-issue.yml
    with:
      title: "Test Issue"
      body: "This is a test issue"
